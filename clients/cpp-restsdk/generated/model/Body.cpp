/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.0.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "Body.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

Body::Body()
{
    m_Favorite = false;
}

Body::~Body()
{
}

void Body::validate()
{
    // TODO: implement validation
}

web::json::value Body::toJson() const
{
    web::json::value val = web::json::value::object();

    val[utility::conversions::to_string_t("favorite")] = ModelBase::toJson(m_Favorite);

    return val;
}

void Body::fromJson(web::json::value& val)
{
    setFavorite(ModelBase::boolFromJson(val[utility::conversions::to_string_t("favorite")]));
}

void Body::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t("favorite"), m_Favorite));
}

void Body::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    setFavorite(ModelBase::boolFromHttpContent(multipart->getContent(utility::conversions::to_string_t("favorite"))));
}

bool Body::isFavorite() const
{
    return m_Favorite;
}


void Body::setFavorite(bool value)
{
    m_Favorite = value;
    
}
}
}
}
}

