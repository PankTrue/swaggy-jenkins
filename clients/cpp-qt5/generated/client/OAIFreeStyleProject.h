/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.0.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFreeStyleProject.h
 *
 * 
 */

#ifndef OAIFreeStyleProject_H_
#define OAIFreeStyleProject_H_

#include <QJsonObject>


#include "OAIOAIFreeStyleBuild.h"
#include "OAIOAIFreeStyleProjectactions.h"
#include "OAIOAIFreeStyleProjecthealthReport.h"
#include "OAIOAINullSCM.h"
#include <QList>
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIFreeStyleProject: public OAIObject {
public:
    OAIFreeStyleProject();
    OAIFreeStyleProject(QString json);
    ~OAIFreeStyleProject();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    OAIFreeStyleProject* fromJson(QString jsonString) override;

    QString* getClass();
    void setClass(QString* _class);

    QString* getName();
    void setName(QString* name);

    QString* getUrl();
    void setUrl(QString* url);

    QString* getColor();
    void setColor(QString* color);

    QList<OAIFreeStyleProjectactions*>* getActions();
    void setActions(QList<OAIFreeStyleProjectactions*>* actions);

    QString* getDescription();
    void setDescription(QString* description);

    QString* getDisplayName();
    void setDisplayName(QString* display_name);

    QString* getDisplayNameOrNull();
    void setDisplayNameOrNull(QString* display_name_or_null);

    QString* getFullDisplayName();
    void setFullDisplayName(QString* full_display_name);

    QString* getFullName();
    void setFullName(QString* full_name);

    bool isBuildable();
    void setBuildable(bool buildable);

    QList<OAIFreeStyleBuild*>* getBuilds();
    void setBuilds(QList<OAIFreeStyleBuild*>* builds);

    OAIFreeStyleBuild* getFirstBuild();
    void setFirstBuild(OAIFreeStyleBuild* first_build);

    QList<OAIFreeStyleProjecthealthReport*>* getHealthReport();
    void setHealthReport(QList<OAIFreeStyleProjecthealthReport*>* health_report);

    bool isInQueue();
    void setInQueue(bool in_queue);

    bool isKeepDependencies();
    void setKeepDependencies(bool keep_dependencies);

    OAIFreeStyleBuild* getLastBuild();
    void setLastBuild(OAIFreeStyleBuild* last_build);

    OAIFreeStyleBuild* getLastCompletedBuild();
    void setLastCompletedBuild(OAIFreeStyleBuild* last_completed_build);

    QString* getLastFailedBuild();
    void setLastFailedBuild(QString* last_failed_build);

    OAIFreeStyleBuild* getLastStableBuild();
    void setLastStableBuild(OAIFreeStyleBuild* last_stable_build);

    OAIFreeStyleBuild* getLastSuccessfulBuild();
    void setLastSuccessfulBuild(OAIFreeStyleBuild* last_successful_build);

    QString* getLastUnstableBuild();
    void setLastUnstableBuild(QString* last_unstable_build);

    QString* getLastUnsuccessfulBuild();
    void setLastUnsuccessfulBuild(QString* last_unsuccessful_build);

    qint32 getNextBuildNumber();
    void setNextBuildNumber(qint32 next_build_number);

    QString* getQueueItem();
    void setQueueItem(QString* queue_item);

    bool isConcurrentBuild();
    void setConcurrentBuild(bool concurrent_build);

    OAINullSCM* getScm();
    void setScm(OAINullSCM* scm);


    virtual bool isSet() override;

private:
    QString* _class;
    bool m__class_isSet;

    QString* name;
    bool m_name_isSet;

    QString* url;
    bool m_url_isSet;

    QString* color;
    bool m_color_isSet;

    QList<OAIFreeStyleProjectactions*>* actions;
    bool m_actions_isSet;

    QString* description;
    bool m_description_isSet;

    QString* display_name;
    bool m_display_name_isSet;

    QString* display_name_or_null;
    bool m_display_name_or_null_isSet;

    QString* full_display_name;
    bool m_full_display_name_isSet;

    QString* full_name;
    bool m_full_name_isSet;

    bool buildable;
    bool m_buildable_isSet;

    QList<OAIFreeStyleBuild*>* builds;
    bool m_builds_isSet;

    OAIFreeStyleBuild* first_build;
    bool m_first_build_isSet;

    QList<OAIFreeStyleProjecthealthReport*>* health_report;
    bool m_health_report_isSet;

    bool in_queue;
    bool m_in_queue_isSet;

    bool keep_dependencies;
    bool m_keep_dependencies_isSet;

    OAIFreeStyleBuild* last_build;
    bool m_last_build_isSet;

    OAIFreeStyleBuild* last_completed_build;
    bool m_last_completed_build_isSet;

    QString* last_failed_build;
    bool m_last_failed_build_isSet;

    OAIFreeStyleBuild* last_stable_build;
    bool m_last_stable_build_isSet;

    OAIFreeStyleBuild* last_successful_build;
    bool m_last_successful_build_isSet;

    QString* last_unstable_build;
    bool m_last_unstable_build_isSet;

    QString* last_unsuccessful_build;
    bool m_last_unsuccessful_build_isSet;

    qint32 next_build_number;
    bool m_next_build_number_isSet;

    QString* queue_item;
    bool m_queue_item_isSet;

    bool concurrent_build;
    bool m_concurrent_build_isSet;

    OAINullSCM* scm;
    bool m_scm_isSet;

};

}

#endif /* OAIFreeStyleProject_H_ */
