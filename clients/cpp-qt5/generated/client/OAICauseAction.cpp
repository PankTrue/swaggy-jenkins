/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAICauseAction.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAICauseAction::OAICauseAction(QString json) {
    init();
    this->fromJson(json);
}

OAICauseAction::OAICauseAction() {
    init();
}

OAICauseAction::~OAICauseAction() {
    this->cleanup();
}

void
OAICauseAction::init() {
    _class = new QString("");
    m__class_isSet = false;
    causes = new QList<OAICauseUserIdCause*>();
    m_causes_isSet = false;
}

void
OAICauseAction::cleanup() {
    if(_class != nullptr) { 
        delete _class;
    }
    if(causes != nullptr) { 
        auto arr = causes;
        for(auto o: *arr) { 
            delete o;
        }
        delete causes;
    }
}

OAICauseAction*
OAICauseAction::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAICauseAction::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&_class, pJson["_class"], "QString", "QString");
    
    
    ::OpenAPI::setValue(&causes, pJson["causes"], "QList", "OAICauseUserIdCause");
}

QString
OAICauseAction::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAICauseAction::asJsonObject() {
    QJsonObject obj;
    if(_class != nullptr && *_class != QString("")){
        toJsonValue(QString("_class"), _class, obj, QString("QString"));
    }
    if(causes->size() > 0){
        toJsonArray((QList<void*>*)causes, obj, "causes", "OAICauseUserIdCause");
    }

    return obj;
}

QString*
OAICauseAction::getClass() {
    return _class;
}
void
OAICauseAction::setClass(QString* _class) {
    this->_class = _class;
    this->m__class_isSet = true;
}

QList<OAICauseUserIdCause*>*
OAICauseAction::getCauses() {
    return causes;
}
void
OAICauseAction::setCauses(QList<OAICauseUserIdCause*>* causes) {
    this->causes = causes;
    this->m_causes_isSet = true;
}


bool
OAICauseAction::isSet(){
    bool isObjectUpdated = false;
    do{
        if(_class != nullptr && *_class != QString("")){ isObjectUpdated = true; break;}
        if(causes->size() > 0){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

