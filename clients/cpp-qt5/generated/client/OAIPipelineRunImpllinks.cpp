/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIPipelineRunImpllinks.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIPipelineRunImpllinks::OAIPipelineRunImpllinks(QString json) {
    init();
    this->fromJson(json);
}

OAIPipelineRunImpllinks::OAIPipelineRunImpllinks() {
    init();
}

OAIPipelineRunImpllinks::~OAIPipelineRunImpllinks() {
    this->cleanup();
}

void
OAIPipelineRunImpllinks::init() {
    nodes = new OAILink();
    m_nodes_isSet = false;
    log = new OAILink();
    m_log_isSet = false;
    self = new OAILink();
    m_self_isSet = false;
    actions = new OAILink();
    m_actions_isSet = false;
    steps = new OAILink();
    m_steps_isSet = false;
    _class = new QString("");
    m__class_isSet = false;
}

void
OAIPipelineRunImpllinks::cleanup() {
    if(nodes != nullptr) { 
        delete nodes;
    }
    if(log != nullptr) { 
        delete log;
    }
    if(self != nullptr) { 
        delete self;
    }
    if(actions != nullptr) { 
        delete actions;
    }
    if(steps != nullptr) { 
        delete steps;
    }
    if(_class != nullptr) { 
        delete _class;
    }
}

OAIPipelineRunImpllinks*
OAIPipelineRunImpllinks::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIPipelineRunImpllinks::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&nodes, pJson["nodes"], "OAILink", "OAILink");
    
    ::OpenAPI::setValue(&log, pJson["log"], "OAILink", "OAILink");
    
    ::OpenAPI::setValue(&self, pJson["self"], "OAILink", "OAILink");
    
    ::OpenAPI::setValue(&actions, pJson["actions"], "OAILink", "OAILink");
    
    ::OpenAPI::setValue(&steps, pJson["steps"], "OAILink", "OAILink");
    
    ::OpenAPI::setValue(&_class, pJson["_class"], "QString", "QString");
    
}

QString
OAIPipelineRunImpllinks::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIPipelineRunImpllinks::asJsonObject() {
    QJsonObject obj;
    if((nodes != nullptr) && (nodes->isSet())){
        toJsonValue(QString("nodes"), nodes, obj, QString("OAILink"));
    }
    if((log != nullptr) && (log->isSet())){
        toJsonValue(QString("log"), log, obj, QString("OAILink"));
    }
    if((self != nullptr) && (self->isSet())){
        toJsonValue(QString("self"), self, obj, QString("OAILink"));
    }
    if((actions != nullptr) && (actions->isSet())){
        toJsonValue(QString("actions"), actions, obj, QString("OAILink"));
    }
    if((steps != nullptr) && (steps->isSet())){
        toJsonValue(QString("steps"), steps, obj, QString("OAILink"));
    }
    if(_class != nullptr && *_class != QString("")){
        toJsonValue(QString("_class"), _class, obj, QString("QString"));
    }

    return obj;
}

OAILink*
OAIPipelineRunImpllinks::getNodes() {
    return nodes;
}
void
OAIPipelineRunImpllinks::setNodes(OAILink* nodes) {
    this->nodes = nodes;
    this->m_nodes_isSet = true;
}

OAILink*
OAIPipelineRunImpllinks::getLog() {
    return log;
}
void
OAIPipelineRunImpllinks::setLog(OAILink* log) {
    this->log = log;
    this->m_log_isSet = true;
}

OAILink*
OAIPipelineRunImpllinks::getSelf() {
    return self;
}
void
OAIPipelineRunImpllinks::setSelf(OAILink* self) {
    this->self = self;
    this->m_self_isSet = true;
}

OAILink*
OAIPipelineRunImpllinks::getActions() {
    return actions;
}
void
OAIPipelineRunImpllinks::setActions(OAILink* actions) {
    this->actions = actions;
    this->m_actions_isSet = true;
}

OAILink*
OAIPipelineRunImpllinks::getSteps() {
    return steps;
}
void
OAIPipelineRunImpllinks::setSteps(OAILink* steps) {
    this->steps = steps;
    this->m_steps_isSet = true;
}

QString*
OAIPipelineRunImpllinks::getClass() {
    return _class;
}
void
OAIPipelineRunImpllinks::setClass(QString* _class) {
    this->_class = _class;
    this->m__class_isSet = true;
}


bool
OAIPipelineRunImpllinks::isSet(){
    bool isObjectUpdated = false;
    do{
        if(nodes != nullptr && nodes->isSet()){ isObjectUpdated = true; break;}
        if(log != nullptr && log->isSet()){ isObjectUpdated = true; break;}
        if(self != nullptr && self->isSet()){ isObjectUpdated = true; break;}
        if(actions != nullptr && actions->isSet()){ isObjectUpdated = true; break;}
        if(steps != nullptr && steps->isSet()){ isObjectUpdated = true; break;}
        if(_class != nullptr && *_class != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

