/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.0.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIClassesByClass.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIClassesByClass::OAIClassesByClass(QString json) {
    init();
    this->fromJson(json);
}

OAIClassesByClass::OAIClassesByClass() {
    init();
}

OAIClassesByClass::~OAIClassesByClass() {
    this->cleanup();
}

void
OAIClassesByClass::init() {
    classes = new QList<QString*>();
    m_classes_isSet = false;
    _class = new QString("");
    m__class_isSet = false;
}

void
OAIClassesByClass::cleanup() {
    if(classes != nullptr) { 
        auto arr = classes;
        for(auto o: *arr) { 
            delete o;
        }
        delete classes;
    }
    if(_class != nullptr) { 
        delete _class;
    }
}

OAIClassesByClass*
OAIClassesByClass::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIClassesByClass::fromJsonObject(QJsonObject pJson) {
    
    ::OpenAPI::setValue(&classes, pJson["classes"], "QList", "QString");
    ::OpenAPI::setValue(&_class, pJson["_class"], "QString", "QString");
    
}

QString
OAIClassesByClass::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIClassesByClass::asJsonObject() {
    QJsonObject obj;
    if(classes->size() > 0){
        toJsonArray((QList<void*>*)classes, obj, "classes", "QString");
    }
    if(_class != nullptr && *_class != QString("")){
        toJsonValue(QString("_class"), _class, obj, QString("QString"));
    }

    return obj;
}

QList<QString*>*
OAIClassesByClass::getClasses() {
    return classes;
}
void
OAIClassesByClass::setClasses(QList<QString*>* classes) {
    this->classes = classes;
    this->m_classes_isSet = true;
}

QString*
OAIClassesByClass::getClass() {
    return _class;
}
void
OAIClassesByClass::setClass(QString* _class) {
    this->_class = _class;
    this->m__class_isSet = true;
}


bool
OAIClassesByClass::isSet(){
    bool isObjectUpdated = false;
    do{
        if(classes->size() > 0){ isObjectUpdated = true; break;}
        if(_class != nullptr && *_class != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

