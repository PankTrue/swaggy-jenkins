/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIDefaultCrumbIssuer.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIDefaultCrumbIssuer::OAIDefaultCrumbIssuer(QString json) {
    init();
    this->fromJson(json);
}

OAIDefaultCrumbIssuer::OAIDefaultCrumbIssuer() {
    init();
}

OAIDefaultCrumbIssuer::~OAIDefaultCrumbIssuer() {
    this->cleanup();
}

void
OAIDefaultCrumbIssuer::init() {
    _class = new QString("");
    m__class_isSet = false;
    crumb = new QString("");
    m_crumb_isSet = false;
    crumb_request_field = new QString("");
    m_crumb_request_field_isSet = false;
}

void
OAIDefaultCrumbIssuer::cleanup() {
    if(_class != nullptr) { 
        delete _class;
    }
    if(crumb != nullptr) { 
        delete crumb;
    }
    if(crumb_request_field != nullptr) { 
        delete crumb_request_field;
    }
}

OAIDefaultCrumbIssuer*
OAIDefaultCrumbIssuer::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIDefaultCrumbIssuer::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&_class, pJson["_class"], "QString", "QString");
    
    ::OpenAPI::setValue(&crumb, pJson["crumb"], "QString", "QString");
    
    ::OpenAPI::setValue(&crumb_request_field, pJson["crumbRequestField"], "QString", "QString");
    
}

QString
OAIDefaultCrumbIssuer::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIDefaultCrumbIssuer::asJsonObject() {
    QJsonObject obj;
    if(_class != nullptr && *_class != QString("")){
        toJsonValue(QString("_class"), _class, obj, QString("QString"));
    }
    if(crumb != nullptr && *crumb != QString("")){
        toJsonValue(QString("crumb"), crumb, obj, QString("QString"));
    }
    if(crumb_request_field != nullptr && *crumb_request_field != QString("")){
        toJsonValue(QString("crumbRequestField"), crumb_request_field, obj, QString("QString"));
    }

    return obj;
}

QString*
OAIDefaultCrumbIssuer::getClass() {
    return _class;
}
void
OAIDefaultCrumbIssuer::setClass(QString* _class) {
    this->_class = _class;
    this->m__class_isSet = true;
}

QString*
OAIDefaultCrumbIssuer::getCrumb() {
    return crumb;
}
void
OAIDefaultCrumbIssuer::setCrumb(QString* crumb) {
    this->crumb = crumb;
    this->m_crumb_isSet = true;
}

QString*
OAIDefaultCrumbIssuer::getCrumbRequestField() {
    return crumb_request_field;
}
void
OAIDefaultCrumbIssuer::setCrumbRequestField(QString* crumb_request_field) {
    this->crumb_request_field = crumb_request_field;
    this->m_crumb_request_field_isSet = true;
}


bool
OAIDefaultCrumbIssuer::isSet(){
    bool isObjectUpdated = false;
    do{
        if(_class != nullptr && *_class != QString("")){ isObjectUpdated = true; break;}
        if(crumb != nullptr && *crumb != QString("")){ isObjectUpdated = true; break;}
        if(crumb_request_field != nullptr && *crumb_request_field != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

