/* 
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.1.0
 * Contact: blah@cliffano.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GithubOrganization {
  #[serde(rename = "_class")]
  _class: Option<String>,
  #[serde(rename = "_links")]
  _links: Option<::models::GithubOrganizationlinks>,
  #[serde(rename = "jenkinsOrganizationPipeline")]
  jenkins_organization_pipeline: Option<bool>,
  #[serde(rename = "name")]
  name: Option<String>
}

impl GithubOrganization {
  pub fn new() -> GithubOrganization {
    GithubOrganization {
      _class: None,
      _links: None,
      jenkins_organization_pipeline: None,
      name: None
    }
  }

  pub fn set__class(&mut self, _class: String) {
    self._class = Some(_class);
  }

  pub fn with__class(mut self, _class: String) -> GithubOrganization {
    self._class = Some(_class);
    self
  }

  pub fn _class(&self) -> Option<&String> {
    self._class.as_ref()
  }

  pub fn reset__class(&mut self) {
    self._class = None;
  }

  pub fn set__links(&mut self, _links: ::models::GithubOrganizationlinks) {
    self._links = Some(_links);
  }

  pub fn with__links(mut self, _links: ::models::GithubOrganizationlinks) -> GithubOrganization {
    self._links = Some(_links);
    self
  }

  pub fn _links(&self) -> Option<&::models::GithubOrganizationlinks> {
    self._links.as_ref()
  }

  pub fn reset__links(&mut self) {
    self._links = None;
  }

  pub fn set_jenkins_organization_pipeline(&mut self, jenkins_organization_pipeline: bool) {
    self.jenkins_organization_pipeline = Some(jenkins_organization_pipeline);
  }

  pub fn with_jenkins_organization_pipeline(mut self, jenkins_organization_pipeline: bool) -> GithubOrganization {
    self.jenkins_organization_pipeline = Some(jenkins_organization_pipeline);
    self
  }

  pub fn jenkins_organization_pipeline(&self) -> Option<&bool> {
    self.jenkins_organization_pipeline.as_ref()
  }

  pub fn reset_jenkins_organization_pipeline(&mut self) {
    self.jenkins_organization_pipeline = None;
  }

  pub fn set_name(&mut self, name: String) {
    self.name = Some(name);
  }

  pub fn with_name(mut self, name: String) -> GithubOrganization {
    self.name = Some(name);
    self
  }

  pub fn name(&self) -> Option<&String> {
    self.name.as_ref()
  }

  pub fn reset_name(&mut self) {
    self.name = None;
  }

}



