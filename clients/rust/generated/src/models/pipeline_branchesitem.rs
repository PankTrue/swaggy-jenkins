/* 
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.1.0
 * Contact: blah@cliffano.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct PipelineBranchesitem {
  #[serde(rename = "displayName")]
  display_name: Option<String>,
  #[serde(rename = "estimatedDurationInMillis")]
  estimated_duration_in_millis: Option<i32>,
  #[serde(rename = "name")]
  name: Option<String>,
  #[serde(rename = "weatherScore")]
  weather_score: Option<i32>,
  #[serde(rename = "latestRun")]
  latest_run: Option<::models::PipelineBranchesitemlatestRun>,
  #[serde(rename = "organization")]
  organization: Option<String>,
  #[serde(rename = "pullRequest")]
  pull_request: Option<::models::PipelineBranchesitempullRequest>,
  #[serde(rename = "totalNumberOfPullRequests")]
  total_number_of_pull_requests: Option<i32>,
  #[serde(rename = "_class")]
  _class: Option<String>
}

impl PipelineBranchesitem {
  pub fn new() -> PipelineBranchesitem {
    PipelineBranchesitem {
      display_name: None,
      estimated_duration_in_millis: None,
      name: None,
      weather_score: None,
      latest_run: None,
      organization: None,
      pull_request: None,
      total_number_of_pull_requests: None,
      _class: None
    }
  }

  pub fn set_display_name(&mut self, display_name: String) {
    self.display_name = Some(display_name);
  }

  pub fn with_display_name(mut self, display_name: String) -> PipelineBranchesitem {
    self.display_name = Some(display_name);
    self
  }

  pub fn display_name(&self) -> Option<&String> {
    self.display_name.as_ref()
  }

  pub fn reset_display_name(&mut self) {
    self.display_name = None;
  }

  pub fn set_estimated_duration_in_millis(&mut self, estimated_duration_in_millis: i32) {
    self.estimated_duration_in_millis = Some(estimated_duration_in_millis);
  }

  pub fn with_estimated_duration_in_millis(mut self, estimated_duration_in_millis: i32) -> PipelineBranchesitem {
    self.estimated_duration_in_millis = Some(estimated_duration_in_millis);
    self
  }

  pub fn estimated_duration_in_millis(&self) -> Option<&i32> {
    self.estimated_duration_in_millis.as_ref()
  }

  pub fn reset_estimated_duration_in_millis(&mut self) {
    self.estimated_duration_in_millis = None;
  }

  pub fn set_name(&mut self, name: String) {
    self.name = Some(name);
  }

  pub fn with_name(mut self, name: String) -> PipelineBranchesitem {
    self.name = Some(name);
    self
  }

  pub fn name(&self) -> Option<&String> {
    self.name.as_ref()
  }

  pub fn reset_name(&mut self) {
    self.name = None;
  }

  pub fn set_weather_score(&mut self, weather_score: i32) {
    self.weather_score = Some(weather_score);
  }

  pub fn with_weather_score(mut self, weather_score: i32) -> PipelineBranchesitem {
    self.weather_score = Some(weather_score);
    self
  }

  pub fn weather_score(&self) -> Option<&i32> {
    self.weather_score.as_ref()
  }

  pub fn reset_weather_score(&mut self) {
    self.weather_score = None;
  }

  pub fn set_latest_run(&mut self, latest_run: ::models::PipelineBranchesitemlatestRun) {
    self.latest_run = Some(latest_run);
  }

  pub fn with_latest_run(mut self, latest_run: ::models::PipelineBranchesitemlatestRun) -> PipelineBranchesitem {
    self.latest_run = Some(latest_run);
    self
  }

  pub fn latest_run(&self) -> Option<&::models::PipelineBranchesitemlatestRun> {
    self.latest_run.as_ref()
  }

  pub fn reset_latest_run(&mut self) {
    self.latest_run = None;
  }

  pub fn set_organization(&mut self, organization: String) {
    self.organization = Some(organization);
  }

  pub fn with_organization(mut self, organization: String) -> PipelineBranchesitem {
    self.organization = Some(organization);
    self
  }

  pub fn organization(&self) -> Option<&String> {
    self.organization.as_ref()
  }

  pub fn reset_organization(&mut self) {
    self.organization = None;
  }

  pub fn set_pull_request(&mut self, pull_request: ::models::PipelineBranchesitempullRequest) {
    self.pull_request = Some(pull_request);
  }

  pub fn with_pull_request(mut self, pull_request: ::models::PipelineBranchesitempullRequest) -> PipelineBranchesitem {
    self.pull_request = Some(pull_request);
    self
  }

  pub fn pull_request(&self) -> Option<&::models::PipelineBranchesitempullRequest> {
    self.pull_request.as_ref()
  }

  pub fn reset_pull_request(&mut self) {
    self.pull_request = None;
  }

  pub fn set_total_number_of_pull_requests(&mut self, total_number_of_pull_requests: i32) {
    self.total_number_of_pull_requests = Some(total_number_of_pull_requests);
  }

  pub fn with_total_number_of_pull_requests(mut self, total_number_of_pull_requests: i32) -> PipelineBranchesitem {
    self.total_number_of_pull_requests = Some(total_number_of_pull_requests);
    self
  }

  pub fn total_number_of_pull_requests(&self) -> Option<&i32> {
    self.total_number_of_pull_requests.as_ref()
  }

  pub fn reset_total_number_of_pull_requests(&mut self) {
    self.total_number_of_pull_requests = None;
  }

  pub fn set__class(&mut self, _class: String) {
    self._class = Some(_class);
  }

  pub fn with__class(mut self, _class: String) -> PipelineBranchesitem {
    self._class = Some(_class);
    self
  }

  pub fn _class(&self) -> Option<&String> {
    self._class.as_ref()
  }

  pub fn reset__class(&mut self) {
    self._class = None;
  }

}



