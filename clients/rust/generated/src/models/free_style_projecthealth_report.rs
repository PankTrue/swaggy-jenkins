/* 
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.0.0
 * Contact: blah@cliffano.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct FreeStyleProjecthealthReport {
  #[serde(rename = "description")]
  description: Option<String>,
  #[serde(rename = "iconClassName")]
  icon_class_name: Option<String>,
  #[serde(rename = "iconUrl")]
  icon_url: Option<String>,
  #[serde(rename = "score")]
  score: Option<i32>,
  #[serde(rename = "_class")]
  _class: Option<String>
}

impl FreeStyleProjecthealthReport {
  pub fn new() -> FreeStyleProjecthealthReport {
    FreeStyleProjecthealthReport {
      description: None,
      icon_class_name: None,
      icon_url: None,
      score: None,
      _class: None
    }
  }

  pub fn set_description(&mut self, description: String) {
    self.description = Some(description);
  }

  pub fn with_description(mut self, description: String) -> FreeStyleProjecthealthReport {
    self.description = Some(description);
    self
  }

  pub fn description(&self) -> Option<&String> {
    self.description.as_ref()
  }

  pub fn reset_description(&mut self) {
    self.description = None;
  }

  pub fn set_icon_class_name(&mut self, icon_class_name: String) {
    self.icon_class_name = Some(icon_class_name);
  }

  pub fn with_icon_class_name(mut self, icon_class_name: String) -> FreeStyleProjecthealthReport {
    self.icon_class_name = Some(icon_class_name);
    self
  }

  pub fn icon_class_name(&self) -> Option<&String> {
    self.icon_class_name.as_ref()
  }

  pub fn reset_icon_class_name(&mut self) {
    self.icon_class_name = None;
  }

  pub fn set_icon_url(&mut self, icon_url: String) {
    self.icon_url = Some(icon_url);
  }

  pub fn with_icon_url(mut self, icon_url: String) -> FreeStyleProjecthealthReport {
    self.icon_url = Some(icon_url);
    self
  }

  pub fn icon_url(&self) -> Option<&String> {
    self.icon_url.as_ref()
  }

  pub fn reset_icon_url(&mut self) {
    self.icon_url = None;
  }

  pub fn set_score(&mut self, score: i32) {
    self.score = Some(score);
  }

  pub fn with_score(mut self, score: i32) -> FreeStyleProjecthealthReport {
    self.score = Some(score);
    self
  }

  pub fn score(&self) -> Option<&i32> {
    self.score.as_ref()
  }

  pub fn reset_score(&mut self) {
    self.score = None;
  }

  pub fn set__class(&mut self, _class: String) {
    self._class = Some(_class);
  }

  pub fn with__class(mut self, _class: String) -> FreeStyleProjecthealthReport {
    self._class = Some(_class);
    self
  }

  pub fn _class(&self) -> Option<&String> {
    self._class.as_ref()
  }

  pub fn reset__class(&mut self) {
    self._class = None;
  }

}



