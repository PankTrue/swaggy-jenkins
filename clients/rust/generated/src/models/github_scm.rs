/* 
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.1.0
 * Contact: blah@cliffano.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GithubScm {
  #[serde(rename = "_class")]
  _class: Option<String>,
  #[serde(rename = "_links")]
  _links: Option<::models::GithubScmlinks>,
  #[serde(rename = "credentialId")]
  credential_id: Option<String>,
  #[serde(rename = "id")]
  id: Option<String>,
  #[serde(rename = "uri")]
  uri: Option<String>
}

impl GithubScm {
  pub fn new() -> GithubScm {
    GithubScm {
      _class: None,
      _links: None,
      credential_id: None,
      id: None,
      uri: None
    }
  }

  pub fn set__class(&mut self, _class: String) {
    self._class = Some(_class);
  }

  pub fn with__class(mut self, _class: String) -> GithubScm {
    self._class = Some(_class);
    self
  }

  pub fn _class(&self) -> Option<&String> {
    self._class.as_ref()
  }

  pub fn reset__class(&mut self) {
    self._class = None;
  }

  pub fn set__links(&mut self, _links: ::models::GithubScmlinks) {
    self._links = Some(_links);
  }

  pub fn with__links(mut self, _links: ::models::GithubScmlinks) -> GithubScm {
    self._links = Some(_links);
    self
  }

  pub fn _links(&self) -> Option<&::models::GithubScmlinks> {
    self._links.as_ref()
  }

  pub fn reset__links(&mut self) {
    self._links = None;
  }

  pub fn set_credential_id(&mut self, credential_id: String) {
    self.credential_id = Some(credential_id);
  }

  pub fn with_credential_id(mut self, credential_id: String) -> GithubScm {
    self.credential_id = Some(credential_id);
    self
  }

  pub fn credential_id(&self) -> Option<&String> {
    self.credential_id.as_ref()
  }

  pub fn reset_credential_id(&mut self) {
    self.credential_id = None;
  }

  pub fn set_id(&mut self, id: String) {
    self.id = Some(id);
  }

  pub fn with_id(mut self, id: String) -> GithubScm {
    self.id = Some(id);
    self
  }

  pub fn id(&self) -> Option<&String> {
    self.id.as_ref()
  }

  pub fn reset_id(&mut self) {
    self.id = None;
  }

  pub fn set_uri(&mut self, uri: String) {
    self.uri = Some(uri);
  }

  pub fn with_uri(mut self, uri: String) -> GithubScm {
    self.uri = Some(uri);
    self
  }

  pub fn uri(&self) -> Option<&String> {
    self.uri.as_ref()
  }

  pub fn reset_uri(&mut self) {
    self.uri = None;
  }

}



