/* 
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.1.0
 * Contact: blah@cliffano.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GithubRepositorypermissions {
  #[serde(rename = "admin")]
  admin: Option<bool>,
  #[serde(rename = "push")]
  push: Option<bool>,
  #[serde(rename = "pull")]
  pull: Option<bool>,
  #[serde(rename = "_class")]
  _class: Option<String>
}

impl GithubRepositorypermissions {
  pub fn new() -> GithubRepositorypermissions {
    GithubRepositorypermissions {
      admin: None,
      push: None,
      pull: None,
      _class: None
    }
  }

  pub fn set_admin(&mut self, admin: bool) {
    self.admin = Some(admin);
  }

  pub fn with_admin(mut self, admin: bool) -> GithubRepositorypermissions {
    self.admin = Some(admin);
    self
  }

  pub fn admin(&self) -> Option<&bool> {
    self.admin.as_ref()
  }

  pub fn reset_admin(&mut self) {
    self.admin = None;
  }

  pub fn set_push(&mut self, push: bool) {
    self.push = Some(push);
  }

  pub fn with_push(mut self, push: bool) -> GithubRepositorypermissions {
    self.push = Some(push);
    self
  }

  pub fn push(&self) -> Option<&bool> {
    self.push.as_ref()
  }

  pub fn reset_push(&mut self) {
    self.push = None;
  }

  pub fn set_pull(&mut self, pull: bool) {
    self.pull = Some(pull);
  }

  pub fn with_pull(mut self, pull: bool) -> GithubRepositorypermissions {
    self.pull = Some(pull);
    self
  }

  pub fn pull(&self) -> Option<&bool> {
    self.pull.as_ref()
  }

  pub fn reset_pull(&mut self) {
    self.pull = None;
  }

  pub fn set__class(&mut self, _class: String) {
    self._class = Some(_class);
  }

  pub fn with__class(mut self, _class: String) -> GithubRepositorypermissions {
    self._class = Some(_class);
    self
  }

  pub fn _class(&self) -> Option<&String> {
    self._class.as_ref()
  }

  pub fn reset__class(&mut self) {
    self._class = None;
  }

}



