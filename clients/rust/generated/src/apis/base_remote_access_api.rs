/* 
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.1.0
 * Contact: blah@cliffano.com
 * Generated by: https://openapi-generator.tech
 */

use std::rc::Rc;
use std::borrow::Borrow;

use hyper;
use serde_json;
use futures::Future;

use super::{Error, configuration};
use super::request as __internal_request;

pub struct BaseRemoteAccessApiClient<C: hyper::client::Connect> {
    configuration: Rc<configuration::Configuration<C>>,
}

impl<C: hyper::client::Connect> BaseRemoteAccessApiClient<C> {
    pub fn new(configuration: Rc<configuration::Configuration<C>>) -> BaseRemoteAccessApiClient<C> {
        BaseRemoteAccessApiClient {
            configuration: configuration,
        }
    }
}

pub trait BaseRemoteAccessApi {
    fn get_crumb(&self, ) -> Box<Future<Item = ::models::DefaultCrumbIssuer, Error = Error<serde_json::Value>>>;
}


impl<C: hyper::client::Connect>BaseRemoteAccessApi for BaseRemoteAccessApiClient<C> {
    fn get_crumb(&self, ) -> Box<Future<Item = ::models::DefaultCrumbIssuer, Error = Error<serde_json::Value>>> {
        __internal_request::Request::new(hyper::Method::Get, "/crumbIssuer/api/json".to_string())
            .with_auth(__internal_request::Auth::Basic)
            .execute(self.configuration.borrow())
    }

}
