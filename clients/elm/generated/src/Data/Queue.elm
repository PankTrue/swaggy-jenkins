{-
   Swaggy Jenkins
   Jenkins API clients generated from Swagger / Open API specification

   OpenAPI spec version: 1.1.1
   Contact: blah@cliffano.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.Queue exposing (Queue, queueDecoder, queueEncoder)

import Data.QueueBlockedItem exposing (QueueBlockedItem, queueBlockedItemDecoder, queueBlockedItemEncoder)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (decode, optional, required)
import Json.Encode as Encode
import Maybe exposing (map, withDefault)


type alias Queue =
    { class : Maybe String
    , items : Maybe (List QueueBlockedItem)
    }


queueDecoder : Decoder Queue
queueDecoder =
    decode Queue
        |> optional "_class" (Decode.nullable Decode.string) Nothing
        |> optional "items" (Decode.nullable (Decode.list queueBlockedItemDecoder)) Nothing



queueEncoder : Queue -> Encode.Value
queueEncoder model =
    Encode.object
        [ ( "_class", withDefault Encode.null (map Encode.string model.class) )
        , ( "items", withDefault Encode.null (map (Encode.list << List.map queueBlockedItemEncoder) model.items) )
        ]


