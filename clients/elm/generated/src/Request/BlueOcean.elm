{-
   Swaggy Jenkins
   Jenkins API clients generated from Swagger / Open API specification

   OpenAPI spec version: 1.1.1
   Contact: blah@cliffano.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Request.BlueOcean exposing (deletePipelineQueueItem, getAuthenticatedUser, getClasses, getJsonWebKey, getJsonWebToken, getOrganisation, getOrganisations, getPipeline, getPipelineActivities, getPipelineBranch, getPipelineBranchRun, getPipelineBranches, getPipelineFolder, getPipelineFolderPipeline, getPipelineQueue, getPipelineRun, getPipelineRunLog, getPipelineRunNode, getPipelineRunNodeStep, getPipelineRunNodeStepLog, getPipelineRunNodeSteps, getPipelineRunNodes, getPipelineRuns, getPipelines, getSCM, getSCMOrganisationRepositories, getSCMOrganisationRepository, getSCMOrganisations, getUser, getUserFavorites, getUsers, postPipelineRun, postPipelineRuns, putPipelineFavorite, putPipelineRun, search, searchClasses)

import Data.PipelineRun exposing (PipelineRun, pipelineRunDecoder)
import Data.PipelineRunNodes exposing (PipelineRunNodes, pipelineRunNodesDecoder)
import Data.PipelineRuns exposing (PipelineRuns, pipelineRunsDecoder)
import Data.User exposing (User, userDecoder)
import Data.Organisation exposing (Organisation, organisationDecoder)
import Data.PipelineFolderImpl exposing (PipelineFolderImpl, pipelineFolderImplDecoder)
import Data.PipelineImpl exposing (PipelineImpl, pipelineImplDecoder)
import Data.Pipelines exposing (Pipelines, pipelinesDecoder)
import Data.GithubScm exposing (GithubScm, githubScmDecoder)
import Data.FavoriteImpl exposing (FavoriteImpl, favoriteImplDecoder)
import Data.PipelineRunNodeSteps exposing (PipelineRunNodeSteps, pipelineRunNodeStepsDecoder)
import Data.UserFavorites exposing (UserFavorites, userFavoritesDecoder)
import Data.PipelineQueue exposing (PipelineQueue, pipelineQueueDecoder)
import Data.Pipeline exposing (Pipeline, pipelineDecoder)
import Data.PipelineRunNode exposing (PipelineRunNode, pipelineRunNodeDecoder)
import Data.QueueItemImpl exposing (QueueItemImpl, queueItemImplDecoder)
import Data.Organisations exposing (Organisations, organisationsDecoder)
import Data.BranchImpl exposing (BranchImpl, branchImplDecoder)
import Data.PipelineStepImpl exposing (PipelineStepImpl, pipelineStepImplDecoder)
import Data.MultibranchPipeline exposing (MultibranchPipeline, multibranchPipelineDecoder)
import Data.ScmOrganisations exposing (ScmOrganisations, scmOrganisationsDecoder)
import Data.Body exposing (Body, bodyEncoder)
import Data.PipelineActivities exposing (PipelineActivities, pipelineActivitiesDecoder)
import Dict
import Http
import Json.Decode as Decode


basePath : String
basePath =
    "http://localhost"


{-| Delete queue item from an organization pipeline queue
-}
deletePipelineQueueItem : String -> String -> String -> Http.Request ()
deletePipelineQueueItem organization pipeline queue =
    { method = "DELETE"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/queue/" ++ queue
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectStringResponse (\_ -> Ok ())
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve authenticated user details for an organization
-}
getAuthenticatedUser : String -> Http.Request User
getAuthenticatedUser organization =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/user/"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson userDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Get a list of class names supported by a given class
-}
getClasses : String -> Http.Request String
getClasses class =
    { method = "GET"
    , url = basePath ++ "/blue/rest/classes/" ++ class
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve JSON Web Key
-}
getJsonWebKey : Int -> Http.Request String
getJsonWebKey key =
    { method = "GET"
    , url = basePath ++ "/jwt-auth/jwks/" ++ toString key
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve JSON Web Token
-}
getJsonWebToken : Http.Request String
getJsonWebToken =
    { method = "GET"
    , url = basePath ++ "/jwt-auth/token"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve organization details
-}
getOrganisation : String -> Http.Request Organisation
getOrganisation organization =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson organisationDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve all organizations details
-}
getOrganisations : Http.Request Organisations
getOrganisations =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson organisationsDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve pipeline details for an organization
-}
getPipeline : String -> String -> Http.Request Pipeline
getPipeline organization pipeline =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson pipelineDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve all activities details for an organization pipeline
-}
getPipelineActivities : String -> String -> Http.Request PipelineActivities
getPipelineActivities organization pipeline =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/activities"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson pipelineActivitiesDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve branch details for an organization pipeline
-}
getPipelineBranch : String -> String -> String -> Http.Request BranchImpl
getPipelineBranch organization pipeline branch =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/branches/" ++ branch ++ "/"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson branchImplDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve branch run details for an organization pipeline
-}
getPipelineBranchRun : String -> String -> String -> String -> Http.Request PipelineRun
getPipelineBranchRun organization pipeline branch run =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/branches/" ++ branch ++ "/runs/" ++ run
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson pipelineRunDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve all branches details for an organization pipeline
-}
getPipelineBranches : String -> String -> Http.Request MultibranchPipeline
getPipelineBranches organization pipeline =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/branches"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson multibranchPipelineDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve pipeline folder for an organization
-}
getPipelineFolder : String -> String -> Http.Request PipelineFolderImpl
getPipelineFolder organization folder =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ folder ++ "/"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson pipelineFolderImplDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve pipeline details for an organization folder
-}
getPipelineFolderPipeline : String -> String -> String -> Http.Request PipelineImpl
getPipelineFolderPipeline organization pipeline folder =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ folder ++ "/pipelines/" ++ pipeline
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson pipelineImplDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve queue details for an organization pipeline
-}
getPipelineQueue : String -> String -> Http.Request PipelineQueue
getPipelineQueue organization pipeline =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/queue"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson pipelineQueueDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve run details for an organization pipeline
-}
getPipelineRun : String -> String -> String -> Http.Request PipelineRun
getPipelineRun organization pipeline run =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/runs/" ++ run
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson pipelineRunDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Get log for a pipeline run
-}
getPipelineRunLog : String -> String -> String -> Http.Request String
getPipelineRunLog organization pipeline run =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/runs/" ++ run ++ "/log"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve run node details for an organization pipeline
-}
getPipelineRunNode : String -> String -> String -> String -> Http.Request PipelineRunNode
getPipelineRunNode organization pipeline run node =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/runs/" ++ run ++ "/nodes/" ++ node
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson pipelineRunNodeDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve run node details for an organization pipeline
-}
getPipelineRunNodeStep : String -> String -> String -> String -> String -> Http.Request PipelineStepImpl
getPipelineRunNodeStep organization pipeline run node step =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/runs/" ++ run ++ "/nodes/" ++ node ++ "/steps/" ++ step
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson pipelineStepImplDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Get log for a pipeline run node step
-}
getPipelineRunNodeStepLog : String -> String -> String -> String -> String -> Http.Request String
getPipelineRunNodeStepLog organization pipeline run node step =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/runs/" ++ run ++ "/nodes/" ++ node ++ "/steps/" ++ step ++ "/log"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve run node steps details for an organization pipeline
-}
getPipelineRunNodeSteps : String -> String -> String -> String -> Http.Request PipelineRunNodeSteps
getPipelineRunNodeSteps organization pipeline run node =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/runs/" ++ run ++ "/nodes/" ++ node ++ "/steps"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson pipelineRunNodeStepsDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve run nodes details for an organization pipeline
-}
getPipelineRunNodes : String -> String -> String -> Http.Request PipelineRunNodes
getPipelineRunNodes organization pipeline run =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/runs/" ++ run ++ "/nodes"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson pipelineRunNodesDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve all runs details for an organization pipeline
-}
getPipelineRuns : String -> String -> Http.Request PipelineRuns
getPipelineRuns organization pipeline =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/runs"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson pipelineRunsDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve all pipelines details for an organization
-}
getPipelines : String -> Http.Request Pipelines
getPipelines organization =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson pipelinesDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve SCM details for an organization
-}
getSCM : String -> String -> Http.Request GithubScm
getSCM organization scm =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/scm/" ++ scm
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson githubScmDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve SCM organization repositories details for an organization
-}
getSCMOrganisationRepositories : String -> String -> String -> Http.Request ScmOrganisations
getSCMOrganisationRepositories organization scm scmOrganisation =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/scm/" ++ scm ++ "/organizations/" ++ scmOrganisation ++ "/repositories"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson scmOrganisationsDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve SCM organization repository details for an organization
-}
getSCMOrganisationRepository : String -> String -> String -> String -> Http.Request ScmOrganisations
getSCMOrganisationRepository organization scm scmOrganisation repository =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/scm/" ++ scm ++ "/organizations/" ++ scmOrganisation ++ "/repositories/" ++ repository
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson scmOrganisationsDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve SCM organizations details for an organization
-}
getSCMOrganisations : String -> String -> Http.Request ScmOrganisations
getSCMOrganisations organization scm =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/scm/" ++ scm ++ "/organizations"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson scmOrganisationsDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve user details for an organization
-}
getUser : String -> String -> Http.Request User
getUser organization user =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/users/" ++ user
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson userDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve user favorites details for an organization
-}
getUserFavorites : String -> Http.Request UserFavorites
getUserFavorites user =
    { method = "GET"
    , url = basePath ++ "/blue/rest/users/" ++ user ++ "/favorites"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson userFavoritesDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Retrieve users details for an organization
-}
getUsers : String -> Http.Request User
getUsers organization =
    { method = "GET"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/users/"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson userDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Replay an organization pipeline run
-}
postPipelineRun : String -> String -> String -> Http.Request QueueItemImpl
postPipelineRun organization pipeline run =
    { method = "POST"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/runs/" ++ run ++ "/replay"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson queueItemImplDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Start a build for an organization pipeline
-}
postPipelineRuns : String -> String -> Http.Request QueueItemImpl
postPipelineRuns organization pipeline =
    { method = "POST"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/runs"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson queueItemImplDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Favorite/unfavorite a pipeline
-}
putPipelineFavorite : String -> String -> Body -> Http.Request FavoriteImpl
putPipelineFavorite organization pipeline model =
    { method = "PUT"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/favorite"
    , headers = []
    , body = Http.jsonBody <| bodyEncoder model
    , expect = Http.expectJson favoriteImplDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Stop a build of an organization pipeline
-}
putPipelineRun : String -> String -> String -> Http.Request PipelineRun
putPipelineRun organization pipeline run =
    { method = "PUT"
    , url = basePath ++ "/blue/rest/organizations/" ++ organization ++ "/pipelines/" ++ pipeline ++ "/runs/" ++ run ++ "/stop"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson pipelineRunDecoder
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Search for any resource details
-}
search : Http.Request String
search =
    { method = "GET"
    , url = basePath ++ "/blue/rest/search/"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request


{-| Get classes details
-}
searchClasses : Http.Request String
searchClasses =
    { method = "GET"
    , url = basePath ++ "/blue/rest/classes/"
    , headers = []
    , body = Http.emptyBody
    , expect = Http.expectJson Decode.string
    , timeout = Just 30000
    , withCredentials = False
    }
        |> Http.request
