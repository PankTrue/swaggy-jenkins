/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* OpenAPI spec version: 1.0.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "GithubOrganization.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

GithubOrganization::GithubOrganization()
{
    m__class = "";
    m__classIsSet = false;
    m__linksIsSet = false;
    m_JenkinsOrganizationPipeline = false;
    m_JenkinsOrganizationPipelineIsSet = false;
    m_Name = "";
    m_NameIsSet = false;
    
}

GithubOrganization::~GithubOrganization()
{
}

void GithubOrganization::validate()
{
    // TODO: implement validation
}

nlohmann::json GithubOrganization::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m__classIsSet)
    {
        val["_class"] = ModelBase::toJson(m__class);
    }
    if(m__linksIsSet)
    {
        val["_links"] = ModelBase::toJson(m__links);
    }
    if(m_JenkinsOrganizationPipelineIsSet)
    {
        val["jenkinsOrganizationPipeline"] = m_JenkinsOrganizationPipeline;
    }
    if(m_NameIsSet)
    {
        val["name"] = ModelBase::toJson(m_Name);
    }
    

    return val;
}

void GithubOrganization::fromJson(nlohmann::json& val)
{
    if(val.find("_class") != val.end())
    {
        setClass(val.at("_class"));
    }
    if(val.find("_links") != val.end())
    {
        if(!val["_links"].is_null())
        {
            GithubOrganizationlinks newItem;
            newItem.fromJson(val["_links"]);
            setLinks( newItem );
        }
        
    }
    if(val.find("jenkinsOrganizationPipeline") != val.end())
    {
        setJenkinsOrganizationPipeline(val.at("jenkinsOrganizationPipeline"));
    }
    if(val.find("name") != val.end())
    {
        setName(val.at("name"));
    }
    
}


std::string GithubOrganization::getClass() const
{
    return m__class;
}
void GithubOrganization::setClass(std::string const& value)
{
    m__class = value;
    m__classIsSet = true;
}
bool GithubOrganization::classIsSet() const
{
    return m__classIsSet;
}
void GithubOrganization::unset_class()
{
    m__classIsSet = false;
}
GithubOrganizationlinks GithubOrganization::getLinks() const
{
    return m__links;
}
void GithubOrganization::setLinks(GithubOrganizationlinks const& value)
{
    m__links = value;
    m__linksIsSet = true;
}
bool GithubOrganization::linksIsSet() const
{
    return m__linksIsSet;
}
void GithubOrganization::unset_links()
{
    m__linksIsSet = false;
}
bool GithubOrganization::isJenkinsOrganizationPipeline() const
{
    return m_JenkinsOrganizationPipeline;
}
void GithubOrganization::setJenkinsOrganizationPipeline(bool const value)
{
    m_JenkinsOrganizationPipeline = value;
    m_JenkinsOrganizationPipelineIsSet = true;
}
bool GithubOrganization::jenkinsOrganizationPipelineIsSet() const
{
    return m_JenkinsOrganizationPipelineIsSet;
}
void GithubOrganization::unsetJenkinsOrganizationPipeline()
{
    m_JenkinsOrganizationPipelineIsSet = false;
}
std::string GithubOrganization::getName() const
{
    return m_Name;
}
void GithubOrganization::setName(std::string const& value)
{
    m_Name = value;
    m_NameIsSet = true;
}
bool GithubOrganization::nameIsSet() const
{
    return m_NameIsSet;
}
void GithubOrganization::unsetName()
{
    m_NameIsSet = false;
}

}
}
}
}

