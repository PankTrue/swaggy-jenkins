/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* OpenAPI spec version: 1.0.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * SwapSpaceMonitorMemoryUsage2.h
 *
 * 
 */

#ifndef SwapSpaceMonitorMemoryUsage2_H_
#define SwapSpaceMonitorMemoryUsage2_H_


#include "ModelBase.h"

#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  SwapSpaceMonitorMemoryUsage2
    : public ModelBase
{
public:
    SwapSpaceMonitorMemoryUsage2();
    virtual ~SwapSpaceMonitorMemoryUsage2();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// SwapSpaceMonitorMemoryUsage2 members

    /// <summary>
    /// 
    /// </summary>
    std::string getClass() const;
    void setClass(std::string const& value);
    bool classIsSet() const;
    void unset_class();
    /// <summary>
    /// 
    /// </summary>
    int32_t getAvailablePhysicalMemory() const;
    void setAvailablePhysicalMemory(int32_t const value);
    bool availablePhysicalMemoryIsSet() const;
    void unsetAvailablePhysicalMemory();
    /// <summary>
    /// 
    /// </summary>
    int32_t getAvailableSwapSpace() const;
    void setAvailableSwapSpace(int32_t const value);
    bool availableSwapSpaceIsSet() const;
    void unsetAvailableSwapSpace();
    /// <summary>
    /// 
    /// </summary>
    int32_t getTotalPhysicalMemory() const;
    void setTotalPhysicalMemory(int32_t const value);
    bool totalPhysicalMemoryIsSet() const;
    void unsetTotalPhysicalMemory();
    /// <summary>
    /// 
    /// </summary>
    int32_t getTotalSwapSpace() const;
    void setTotalSwapSpace(int32_t const value);
    bool totalSwapSpaceIsSet() const;
    void unsetTotalSwapSpace();

protected:
    std::string m__class;
    bool m__classIsSet;
    int32_t m_AvailablePhysicalMemory;
    bool m_AvailablePhysicalMemoryIsSet;
    int32_t m_AvailableSwapSpace;
    bool m_AvailableSwapSpaceIsSet;
    int32_t m_TotalPhysicalMemory;
    bool m_TotalPhysicalMemoryIsSet;
    int32_t m_TotalSwapSpace;
    bool m_TotalSwapSpaceIsSet;
};

}
}
}
}

#endif /* SwapSpaceMonitorMemoryUsage2_H_ */
