/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* OpenAPI spec version: 1.0.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * GithubRepositories.h
 *
 * 
 */

#ifndef GithubRepositories_H_
#define GithubRepositories_H_


#include "ModelBase.h"

#include "GithubRepositorieslinks.h"
#include <string>
#include "GithubRepository.h"
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  GithubRepositories
    : public ModelBase
{
public:
    GithubRepositories();
    virtual ~GithubRepositories();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// GithubRepositories members

    /// <summary>
    /// 
    /// </summary>
    std::string getClass() const;
    void setClass(std::string const& value);
    bool classIsSet() const;
    void unset_class();
    /// <summary>
    /// 
    /// </summary>
    GithubRepositorieslinks getLinks() const;
    void setLinks(GithubRepositorieslinks const& value);
    bool linksIsSet() const;
    void unset_links();
    /// <summary>
    /// 
    /// </summary>
    std::vector<GithubRepository>& getItems();
    bool itemsIsSet() const;
    void unsetItems();
    /// <summary>
    /// 
    /// </summary>
    int32_t getLastPage() const;
    void setLastPage(int32_t const value);
    bool lastPageIsSet() const;
    void unsetLastPage();
    /// <summary>
    /// 
    /// </summary>
    int32_t getNextPage() const;
    void setNextPage(int32_t const value);
    bool nextPageIsSet() const;
    void unsetNextPage();
    /// <summary>
    /// 
    /// </summary>
    int32_t getPageSize() const;
    void setPageSize(int32_t const value);
    bool pageSizeIsSet() const;
    void unsetPageSize();

protected:
    std::string m__class;
    bool m__classIsSet;
    GithubRepositorieslinks m__links;
    bool m__linksIsSet;
    std::vector<GithubRepository> m_Items;
    bool m_ItemsIsSet;
    int32_t m_LastPage;
    bool m_LastPageIsSet;
    int32_t m_NextPage;
    bool m_NextPageIsSet;
    int32_t m_PageSize;
    bool m_PageSizeIsSet;
};

}
}
}
}

#endif /* GithubRepositories_H_ */
