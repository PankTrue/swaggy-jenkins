/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* OpenAPI spec version: 1.0.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "User.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

User::User()
{
    m__class = "";
    m__classIsSet = false;
    m_Id = "";
    m_IdIsSet = false;
    m_FullName = "";
    m_FullNameIsSet = false;
    m_Email = "";
    m_EmailIsSet = false;
    m_Name = "";
    m_NameIsSet = false;
    
}

User::~User()
{
}

void User::validate()
{
    // TODO: implement validation
}

nlohmann::json User::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m__classIsSet)
    {
        val["_class"] = ModelBase::toJson(m__class);
    }
    if(m_IdIsSet)
    {
        val["id"] = ModelBase::toJson(m_Id);
    }
    if(m_FullNameIsSet)
    {
        val["fullName"] = ModelBase::toJson(m_FullName);
    }
    if(m_EmailIsSet)
    {
        val["email"] = ModelBase::toJson(m_Email);
    }
    if(m_NameIsSet)
    {
        val["name"] = ModelBase::toJson(m_Name);
    }
    

    return val;
}

void User::fromJson(nlohmann::json& val)
{
    if(val.find("_class") != val.end())
    {
        setClass(val.at("_class"));
    }
    if(val.find("id") != val.end())
    {
        setId(val.at("id"));
    }
    if(val.find("fullName") != val.end())
    {
        setFullName(val.at("fullName"));
    }
    if(val.find("email") != val.end())
    {
        setEmail(val.at("email"));
    }
    if(val.find("name") != val.end())
    {
        setName(val.at("name"));
    }
    
}


std::string User::getClass() const
{
    return m__class;
}
void User::setClass(std::string const& value)
{
    m__class = value;
    m__classIsSet = true;
}
bool User::classIsSet() const
{
    return m__classIsSet;
}
void User::unset_class()
{
    m__classIsSet = false;
}
std::string User::getId() const
{
    return m_Id;
}
void User::setId(std::string const& value)
{
    m_Id = value;
    m_IdIsSet = true;
}
bool User::idIsSet() const
{
    return m_IdIsSet;
}
void User::unsetId()
{
    m_IdIsSet = false;
}
std::string User::getFullName() const
{
    return m_FullName;
}
void User::setFullName(std::string const& value)
{
    m_FullName = value;
    m_FullNameIsSet = true;
}
bool User::fullNameIsSet() const
{
    return m_FullNameIsSet;
}
void User::unsetFullName()
{
    m_FullNameIsSet = false;
}
std::string User::getEmail() const
{
    return m_Email;
}
void User::setEmail(std::string const& value)
{
    m_Email = value;
    m_EmailIsSet = true;
}
bool User::emailIsSet() const
{
    return m_EmailIsSet;
}
void User::unsetEmail()
{
    m_EmailIsSet = false;
}
std::string User::getName() const
{
    return m_Name;
}
void User::setName(std::string const& value)
{
    m_Name = value;
    m_NameIsSet = true;
}
bool User::nameIsSet() const
{
    return m_NameIsSet;
}
void User::unsetName()
{
    m_NameIsSet = false;
}

}
}
}
}

