/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* OpenAPI spec version: 1.1.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "GithubScm.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

GithubScm::GithubScm()
{
    m__class = "";
    m__classIsSet = false;
    m__linksIsSet = false;
    m_CredentialId = "";
    m_CredentialIdIsSet = false;
    m_Id = "";
    m_IdIsSet = false;
    m_Uri = "";
    m_UriIsSet = false;
    
}

GithubScm::~GithubScm()
{
}

void GithubScm::validate()
{
    // TODO: implement validation
}

nlohmann::json GithubScm::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m__classIsSet)
    {
        val["_class"] = ModelBase::toJson(m__class);
    }
    if(m__linksIsSet)
    {
        val["_links"] = ModelBase::toJson(m__links);
    }
    if(m_CredentialIdIsSet)
    {
        val["credentialId"] = ModelBase::toJson(m_CredentialId);
    }
    if(m_IdIsSet)
    {
        val["id"] = ModelBase::toJson(m_Id);
    }
    if(m_UriIsSet)
    {
        val["uri"] = ModelBase::toJson(m_Uri);
    }
    

    return val;
}

void GithubScm::fromJson(nlohmann::json& val)
{
    if(val.find("_class") != val.end())
    {
        setClass(val.at("_class"));
    }
    if(val.find("_links") != val.end())
    {
        if(!val["_links"].is_null())
        {
            GithubScmlinks newItem;
            newItem.fromJson(val["_links"]);
            setLinks( newItem );
        }
        
    }
    if(val.find("credentialId") != val.end())
    {
        setCredentialId(val.at("credentialId"));
    }
    if(val.find("id") != val.end())
    {
        setId(val.at("id"));
    }
    if(val.find("uri") != val.end())
    {
        setUri(val.at("uri"));
    }
    
}


std::string GithubScm::getClass() const
{
    return m__class;
}
void GithubScm::setClass(std::string const& value)
{
    m__class = value;
    m__classIsSet = true;
}
bool GithubScm::classIsSet() const
{
    return m__classIsSet;
}
void GithubScm::unset_class()
{
    m__classIsSet = false;
}
GithubScmlinks GithubScm::getLinks() const
{
    return m__links;
}
void GithubScm::setLinks(GithubScmlinks const& value)
{
    m__links = value;
    m__linksIsSet = true;
}
bool GithubScm::linksIsSet() const
{
    return m__linksIsSet;
}
void GithubScm::unset_links()
{
    m__linksIsSet = false;
}
std::string GithubScm::getCredentialId() const
{
    return m_CredentialId;
}
void GithubScm::setCredentialId(std::string const& value)
{
    m_CredentialId = value;
    m_CredentialIdIsSet = true;
}
bool GithubScm::credentialIdIsSet() const
{
    return m_CredentialIdIsSet;
}
void GithubScm::unsetCredentialId()
{
    m_CredentialIdIsSet = false;
}
std::string GithubScm::getId() const
{
    return m_Id;
}
void GithubScm::setId(std::string const& value)
{
    m_Id = value;
    m_IdIsSet = true;
}
bool GithubScm::idIsSet() const
{
    return m_IdIsSet;
}
void GithubScm::unsetId()
{
    m_IdIsSet = false;
}
std::string GithubScm::getUri() const
{
    return m_Uri;
}
void GithubScm::setUri(std::string const& value)
{
    m_Uri = value;
    m_UriIsSet = true;
}
bool GithubScm::uriIsSet() const
{
    return m_UriIsSet;
}
void GithubScm::unsetUri()
{
    m_UriIsSet = false;
}

}
}
}
}

