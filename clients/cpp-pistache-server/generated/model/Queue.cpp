/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* OpenAPI spec version: 1.1.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Queue.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

Queue::Queue()
{
    m__class = "";
    m__classIsSet = false;
    m_ItemsIsSet = false;
    
}

Queue::~Queue()
{
}

void Queue::validate()
{
    // TODO: implement validation
}

nlohmann::json Queue::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m__classIsSet)
    {
        val["_class"] = ModelBase::toJson(m__class);
    }
    {
        nlohmann::json jsonArray;
        for( auto& item : m_Items )
        {
            jsonArray.push_back(ModelBase::toJson(item));
        }
        
        if(jsonArray.size() > 0)
        {
            val["items"] = jsonArray;
        }
    }
    

    return val;
}

void Queue::fromJson(nlohmann::json& val)
{
    if(val.find("_class") != val.end())
    {
        setClass(val.at("_class"));
    }
    {
        m_Items.clear();
        nlohmann::json jsonArray;
        if(val.find("items") != val.end())
        {
        for( auto& item : val["items"] )
        {
            
            if(item.is_null())
            {
                m_Items.push_back( QueueBlockedItem() );
            }
            else
            {
                QueueBlockedItem newItem;
                newItem.fromJson(item);
                m_Items.push_back( newItem );
            }
            
        }
        }
    }
    
}


std::string Queue::getClass() const
{
    return m__class;
}
void Queue::setClass(std::string const& value)
{
    m__class = value;
    m__classIsSet = true;
}
bool Queue::classIsSet() const
{
    return m__classIsSet;
}
void Queue::unset_class()
{
    m__classIsSet = false;
}
std::vector<QueueBlockedItem>& Queue::getItems()
{
    return m_Items;
}
bool Queue::itemsIsSet() const
{
    return m_ItemsIsSet;
}
void Queue::unsetItems()
{
    m_ItemsIsSet = false;
}

}
}
}
}

