/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.0.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "GithubContent.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

GithubContent::GithubContent()
{
    m_Name = "";
    m_Sha = "";
    m__class = "";
    m_Repo = "";
    m_Size = 0;
    m_Owner = "";
    m_Path = "";
    m_Base64Data = "";
    
}

GithubContent::~GithubContent()
{
}

std::string GithubContent::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	pt.put("Name", m_Name);
	pt.put("Sha", m_Sha);
	pt.put("_class", m__class);
	pt.put("Repo", m_Repo);
	pt.put("Size", m_Size);
	pt.put("Owner", m_Owner);
	pt.put("Path", m_Path);
	pt.put("Base64Data", m_Base64Data);
	write_json(ss, pt, false);
	return ss.str();
}

void GithubContent::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	m_Name = pt.get("Name", "");
	m_Sha = pt.get("Sha", "");
	m__class = pt.get("_class", "");
	m_Repo = pt.get("Repo", "");
	m_Size = pt.get("Size", 0);
	m_Owner = pt.get("Owner", "");
	m_Path = pt.get("Path", "");
	m_Base64Data = pt.get("Base64Data", "");
}

std::string GithubContent::getName() const
{
    return m_Name;
}
void GithubContent::setName(std::string value)
{
    m_Name = value;
}
std::string GithubContent::getSha() const
{
    return m_Sha;
}
void GithubContent::setSha(std::string value)
{
    m_Sha = value;
}
std::string GithubContent::getClass() const
{
    return m__class;
}
void GithubContent::setClass(std::string value)
{
    m__class = value;
}
std::string GithubContent::getRepo() const
{
    return m_Repo;
}
void GithubContent::setRepo(std::string value)
{
    m_Repo = value;
}
int32_t GithubContent::getSize() const
{
    return m_Size;
}
void GithubContent::setSize(int32_t value)
{
    m_Size = value;
}
std::string GithubContent::getOwner() const
{
    return m_Owner;
}
void GithubContent::setOwner(std::string value)
{
    m_Owner = value;
}
std::string GithubContent::getPath() const
{
    return m_Path;
}
void GithubContent::setPath(std::string value)
{
    m_Path = value;
}
std::string GithubContent::getBase64Data() const
{
    return m_Base64Data;
}
void GithubContent::setBase64Data(std::string value)
{
    m_Base64Data = value;
}

}
}
}
}

