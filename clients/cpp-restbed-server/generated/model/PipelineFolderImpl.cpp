/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.1.1
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "PipelineFolderImpl.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

PipelineFolderImpl::PipelineFolderImpl()
{
    m__class = "";
    m_DisplayName = "";
    m_FullName = "";
    m_Name = "";
    m_Organization = "";
    m_NumberOfFolders = 0;
    m_NumberOfPipelines = 0;
    
}

PipelineFolderImpl::~PipelineFolderImpl()
{
}

std::string PipelineFolderImpl::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	pt.put("_class", m__class);
	pt.put("DisplayName", m_DisplayName);
	pt.put("FullName", m_FullName);
	pt.put("Name", m_Name);
	pt.put("Organization", m_Organization);
	pt.put("NumberOfFolders", m_NumberOfFolders);
	pt.put("NumberOfPipelines", m_NumberOfPipelines);
	write_json(ss, pt, false);
	return ss.str();
}

void PipelineFolderImpl::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	m__class = pt.get("_class", "");
	m_DisplayName = pt.get("DisplayName", "");
	m_FullName = pt.get("FullName", "");
	m_Name = pt.get("Name", "");
	m_Organization = pt.get("Organization", "");
	m_NumberOfFolders = pt.get("NumberOfFolders", 0);
	m_NumberOfPipelines = pt.get("NumberOfPipelines", 0);
}

std::string PipelineFolderImpl::getClass() const
{
    return m__class;
}
void PipelineFolderImpl::setClass(std::string value)
{
    m__class = value;
}
std::string PipelineFolderImpl::getDisplayName() const
{
    return m_DisplayName;
}
void PipelineFolderImpl::setDisplayName(std::string value)
{
    m_DisplayName = value;
}
std::string PipelineFolderImpl::getFullName() const
{
    return m_FullName;
}
void PipelineFolderImpl::setFullName(std::string value)
{
    m_FullName = value;
}
std::string PipelineFolderImpl::getName() const
{
    return m_Name;
}
void PipelineFolderImpl::setName(std::string value)
{
    m_Name = value;
}
std::string PipelineFolderImpl::getOrganization() const
{
    return m_Organization;
}
void PipelineFolderImpl::setOrganization(std::string value)
{
    m_Organization = value;
}
int32_t PipelineFolderImpl::getNumberOfFolders() const
{
    return m_NumberOfFolders;
}
void PipelineFolderImpl::setNumberOfFolders(int32_t value)
{
    m_NumberOfFolders = value;
}
int32_t PipelineFolderImpl::getNumberOfPipelines() const
{
    return m_NumberOfPipelines;
}
void PipelineFolderImpl::setNumberOfPipelines(int32_t value)
{
    m_NumberOfPipelines = value;
}

}
}
}
}

