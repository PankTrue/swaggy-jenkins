/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 3.2.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "FreeStyleProjecthealthReport.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

FreeStyleProjecthealthReport::FreeStyleProjecthealthReport()
{
    m_Description = "";
    m_IconClassName = "";
    m_IconUrl = "";
    m_Score = 0;
    m__class = "";
    
}

FreeStyleProjecthealthReport::~FreeStyleProjecthealthReport()
{
}

std::string FreeStyleProjecthealthReport::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	pt.put("Description", m_Description);
	pt.put("IconClassName", m_IconClassName);
	pt.put("IconUrl", m_IconUrl);
	pt.put("Score", m_Score);
	pt.put("_class", m__class);
	write_json(ss, pt, false);
	return ss.str();
}

void FreeStyleProjecthealthReport::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	m_Description = pt.get("Description", "");
	m_IconClassName = pt.get("IconClassName", "");
	m_IconUrl = pt.get("IconUrl", "");
	m_Score = pt.get("Score", 0);
	m__class = pt.get("_class", "");
}

std::string FreeStyleProjecthealthReport::getDescription() const
{
    return m_Description;
}
void FreeStyleProjecthealthReport::setDescription(std::string value)
{
    m_Description = value;
}
std::string FreeStyleProjecthealthReport::getIconClassName() const
{
    return m_IconClassName;
}
void FreeStyleProjecthealthReport::setIconClassName(std::string value)
{
    m_IconClassName = value;
}
std::string FreeStyleProjecthealthReport::getIconUrl() const
{
    return m_IconUrl;
}
void FreeStyleProjecthealthReport::setIconUrl(std::string value)
{
    m_IconUrl = value;
}
int32_t FreeStyleProjecthealthReport::getScore() const
{
    return m_Score;
}
void FreeStyleProjecthealthReport::setScore(int32_t value)
{
    m_Score = value;
}
std::string FreeStyleProjecthealthReport::getClass() const
{
    return m__class;
}
void FreeStyleProjecthealthReport::setClass(std::string value)
{
    m__class = value;
}

}
}
}
}

