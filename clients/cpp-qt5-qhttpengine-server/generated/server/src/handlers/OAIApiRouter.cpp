/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QRegularExpression>

#include "OAIApiRouter.h"
#include "OAIBaseRemoteAccessApiRequest.h"
#include "OAIBlueOceanApiRequest.h"
#include "OAIRemoteAccessApiRequest.h"


namespace OpenAPI {

inline QHttpEngine::Socket::Method toQHttpEngineMethod(QString method){

    if( method == QString("OPTIONS"))
        return QHttpEngine::Socket::Method::OPTIONS;
    if( method == QString("GET"))
        return QHttpEngine::Socket::Method::GET;
    if( method == QString("HEAD"))
        return QHttpEngine::Socket::Method::HEAD;
    if( method == QString("POST"))
        return QHttpEngine::Socket::Method::POST;
    if( method == QString("PUT"))
        return QHttpEngine::Socket::Method::PUT;
    if( method == QString("DELETE"))
        return QHttpEngine::Socket::Method::DELETE;
    if( method == QString("TRACE"))
        return QHttpEngine::Socket::Method::TRACE;
    if( method == QString("CONNECT"))
        return QHttpEngine::Socket::Method::CONNECT;

     return static_cast<QHttpEngine::Socket::Method>(-1);
}

ApiRouter::ApiRouter() {    
    OAIBaseRemoteAccessApiApiHandler = new OAIBaseRemoteAccessApiHandler();
    OAIBlueOceanApiApiHandler = new OAIBlueOceanApiHandler();
    OAIRemoteAccessApiApiHandler = new OAIRemoteAccessApiHandler();
     
}

ApiRouter::~ApiRouter(){
    qDebug() << "~ApiRouter()";    
    delete OAIBaseRemoteAccessApiApiHandler;
    delete OAIBlueOceanApiApiHandler;
    delete OAIRemoteAccessApiApiHandler;
         
}

void ApiRouter::setUpRoutes() {
    
    Routes.insert("//crumbIssuer/api/json",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("GET") == socket->method()){
            auto reqObj = new OAIBaseRemoteAccessApiRequest(socket, OAIBaseRemoteAccessApiApiHandler);
            reqObj->getCrumbRequest();
        }
    });
    Routes.insert("//jwt-auth/token",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("GET") == socket->method()){
            auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
            reqObj->getJsonWebTokenRequest();
        }
    });
    Routes.insert("//blue/rest/organizations/",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("GET") == socket->method()){
            auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
            reqObj->getOrganisationsRequest();
        }
    });
    Routes.insert("//blue/rest/search/",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("GET") == socket->method()){
            auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
            reqObj->searchRequest();
        }
    });
    Routes.insert("//blue/rest/classes/",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("GET") == socket->method()){
            auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
            reqObj->searchClassesRequest();
        }
    });
    Routes.insert("//computer/api/json",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("GET") == socket->method()){
            auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
            reqObj->getComputerRequest();
        }
    });
    Routes.insert("//crumbIssuer/api/json",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("GET") == socket->method()){
            auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
            reqObj->getCrumbRequest();
        }
    });
    Routes.insert("//api/json",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("GET") == socket->method()){
            auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
            reqObj->getJenkinsRequest();
        }
    });
    Routes.insert("//queue/api/json",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("GET") == socket->method()){
            auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
            reqObj->getQueueRequest();
        }
    });
    Routes.insert("//api/json",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("HEAD") == socket->method()){
            auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
            reqObj->headJenkinsRequest();
        }
    });
    Routes.insert("//createItem",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
            reqObj->postCreateItemRequest();
        }
    });
    Routes.insert("//createView",[this](QHttpEngine::Socket *socket) {
        if(toQHttpEngineMethod("POST") == socket->method()){
            auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
            reqObj->postCreateViewRequest();
        }
    }); 
}

void ApiRouter::processRequest(QHttpEngine::Socket *socket){
    if (Routes.contains(socket->path())) {
        for(auto endpoints : Routes.values(socket->path())) {
            endpoints.operator()(socket);
        }
    } else
    {          
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/queue/{queue}");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("DELETE") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->deletePipelineQueueItemRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/queue/{queue}");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("DELETE") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->deletePipelineQueueItemRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/queue/{queue}");
            QString queuePathParam("{"); 
            queuePathParam.append("queue").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(queuePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("DELETE") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->deletePipelineQueueItemRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/user/");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getAuthenticatedUserRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/classes/{class}");
            QString _classPathParam("{"); 
            _classPathParam.append("class").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(_classPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getClassesRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//jwt-auth/jwks/{key}");
            QString keyPathParam("{"); 
            keyPathParam.append("key").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(keyPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getJsonWebKeyRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getOrganisationRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/activities");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineActivitiesRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/activities");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineActivitiesRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineBranchRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineBranchRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/");
            QString branchPathParam("{"); 
            branchPathParam.append("branch").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(branchPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineBranchRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/runs/{run}");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineBranchRunRequest(pathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/runs/{run}");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineBranchRunRequest(pathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/runs/{run}");
            QString branchPathParam("{"); 
            branchPathParam.append("branch").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(branchPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineBranchRunRequest(pathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/branches/{branch}/runs/{run}");
            QString runPathParam("{"); 
            runPathParam.append("run").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(runPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineBranchRunRequest(pathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/branches");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineBranchesRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/branches");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineBranchesRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{folder}/");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineFolderRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{folder}/");
            QString folderPathParam("{"); 
            folderPathParam.append("folder").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(folderPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineFolderRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{folder}/pipelines/{pipeline}");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineFolderPipelineRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{folder}/pipelines/{pipeline}");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineFolderPipelineRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{folder}/pipelines/{pipeline}");
            QString folderPathParam("{"); 
            folderPathParam.append("folder").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(folderPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineFolderPipelineRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/queue");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineQueueRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/queue");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineQueueRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}");
            QString runPathParam("{"); 
            runPathParam.append("run").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(runPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/log");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunLogRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/log");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunLogRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/log");
            QString runPathParam("{"); 
            runPathParam.append("run").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(runPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunLogRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeRequest(pathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeRequest(pathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}");
            QString runPathParam("{"); 
            runPathParam.append("run").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(runPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeRequest(pathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}");
            QString nodePathParam("{"); 
            nodePathParam.append("node").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(nodePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeRequest(pathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeStepRequest(pathparampathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeStepRequest(pathparampathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}");
            QString runPathParam("{"); 
            runPathParam.append("run").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(runPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeStepRequest(pathparampathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}");
            QString nodePathParam("{"); 
            nodePathParam.append("node").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(nodePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeStepRequest(pathparampathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}");
            QString stepPathParam("{"); 
            stepPathParam.append("step").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(stepPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeStepRequest(pathparampathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}/log");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeStepLogRequest(pathparampathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}/log");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeStepLogRequest(pathparampathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}/log");
            QString runPathParam("{"); 
            runPathParam.append("run").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(runPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeStepLogRequest(pathparampathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}/log");
            QString nodePathParam("{"); 
            nodePathParam.append("node").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(nodePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeStepLogRequest(pathparampathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps/{step}/log");
            QString stepPathParam("{"); 
            stepPathParam.append("step").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(stepPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeStepLogRequest(pathparampathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeStepsRequest(pathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeStepsRequest(pathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps");
            QString runPathParam("{"); 
            runPathParam.append("run").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(runPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeStepsRequest(pathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes/{node}/steps");
            QString nodePathParam("{"); 
            nodePathParam.append("node").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(nodePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodeStepsRequest(pathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodesRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodesRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/nodes");
            QString runPathParam("{"); 
            runPathParam.append("run").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(runPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunNodesRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunsRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelineRunsRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getPipelinesRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/scm/{scm}");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getSCMRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/scm/{scm}");
            QString scmPathParam("{"); 
            scmPathParam.append("scm").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(scmPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getSCMRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getSCMOrganisationRepositoriesRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories");
            QString scmPathParam("{"); 
            scmPathParam.append("scm").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(scmPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getSCMOrganisationRepositoriesRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories");
            QString scm_organisationPathParam("{"); 
            scm_organisationPathParam.append("scmOrganisation").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(scm_organisationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getSCMOrganisationRepositoriesRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories/{repository}");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getSCMOrganisationRepositoryRequest(pathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories/{repository}");
            QString scmPathParam("{"); 
            scmPathParam.append("scm").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(scmPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getSCMOrganisationRepositoryRequest(pathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories/{repository}");
            QString scm_organisationPathParam("{"); 
            scm_organisationPathParam.append("scmOrganisation").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(scm_organisationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getSCMOrganisationRepositoryRequest(pathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/scm/{scm}/organizations/{scmOrganisation}/repositories/{repository}");
            QString repositoryPathParam("{"); 
            repositoryPathParam.append("repository").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(repositoryPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getSCMOrganisationRepositoryRequest(pathparampathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/scm/{scm}/organizations");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getSCMOrganisationsRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/scm/{scm}/organizations");
            QString scmPathParam("{"); 
            scmPathParam.append("scm").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(scmPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getSCMOrganisationsRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/users/{user}");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getUserRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/users/{user}");
            QString userPathParam("{"); 
            userPathParam.append("user").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(userPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getUserRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/users/{user}/favorites");
            QString userPathParam("{"); 
            userPathParam.append("user").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(userPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getUserFavoritesRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/users/");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->getUsersRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/replay");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("POST") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->postPipelineRunRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/replay");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("POST") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->postPipelineRunRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/replay");
            QString runPathParam("{"); 
            runPathParam.append("run").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(runPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("POST") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->postPipelineRunRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("POST") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->postPipelineRunsRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("POST") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->postPipelineRunsRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/favorite");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("PUT") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->putPipelineFavoriteRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/favorite");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("PUT") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->putPipelineFavoriteRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/stop");
            QString organizationPathParam("{"); 
            organizationPathParam.append("organization").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(organizationPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("PUT") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->putPipelineRunRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/stop");
            QString pipelinePathParam("{"); 
            pipelinePathParam.append("pipeline").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(pipelinePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("PUT") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->putPipelineRunRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//blue/rest/organizations/{organization}/pipelines/{pipeline}/runs/{run}/stop");
            QString runPathParam("{"); 
            runPathParam.append("run").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(runPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("PUT") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIBlueOceanApiRequest(socket, OAIBlueOceanApiApiHandler);
                reqObj->putPipelineRunRequest(pathparampathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//job/{name}/api/json");
            QString namePathParam("{"); 
            namePathParam.append("name").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(namePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
                reqObj->getJobRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//job/{name}/config.xml");
            QString namePathParam("{"); 
            namePathParam.append("name").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(namePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
                reqObj->getJobConfigRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//job/{name}/lastBuild/api/json");
            QString namePathParam("{"); 
            namePathParam.append("name").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(namePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
                reqObj->getJobLastBuildRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//job/{name}/{number}/logText/progressiveText");
            QString namePathParam("{"); 
            namePathParam.append("name").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(namePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
                reqObj->getJobProgressiveTextRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//job/{name}/{number}/logText/progressiveText");
            QString numberPathParam("{"); 
            numberPathParam.append("number").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(numberPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
                reqObj->getJobProgressiveTextRequest(pathparampathparam);
                return; 
            }
        }        
        { 
            QString completePath("//queue/item/{number}/api/json");
            QString numberPathParam("{"); 
            numberPathParam.append("number").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(numberPathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
                reqObj->getQueueItemRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//view/{name}/api/json");
            QString namePathParam("{"); 
            namePathParam.append("name").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(namePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
                reqObj->getViewRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//view/{name}/config.xml");
            QString namePathParam("{"); 
            namePathParam.append("name").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(namePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("GET") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
                reqObj->getViewConfigRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//job/{name}/build");
            QString namePathParam("{"); 
            namePathParam.append("name").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(namePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("POST") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
                reqObj->postJobBuildRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//job/{name}/config.xml");
            QString namePathParam("{"); 
            namePathParam.append("name").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(namePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("POST") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
                reqObj->postJobConfigRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//job/{name}/doDelete");
            QString namePathParam("{"); 
            namePathParam.append("name").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(namePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("POST") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
                reqObj->postJobDeleteRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//job/{name}/disable");
            QString namePathParam("{"); 
            namePathParam.append("name").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(namePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("POST") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
                reqObj->postJobDisableRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//job/{name}/enable");
            QString namePathParam("{"); 
            namePathParam.append("name").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(namePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("POST") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
                reqObj->postJobEnableRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//job/{name}/lastBuild/stop");
            QString namePathParam("{"); 
            namePathParam.append("name").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(namePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("POST") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
                reqObj->postJobLastBuildStopRequest(pathparam);
                return; 
            }
        }        
        { 
            QString completePath("//view/{name}/config.xml");
            QString namePathParam("{"); 
            namePathParam.append("name").append("}");
            completePath.replace("/", "\\/"); // replace '/' with '\/' for regex 
            completePath.replace(namePathParam, "([^\\/]*?)"); // match anything but '/''
            completePath.append("$");  // End of string
            QRegularExpression re(completePath, QRegularExpression::CaseInsensitiveOption);
            QRegularExpressionMatch match = re.match(socket->path());
            if ((toQHttpEngineMethod("POST") == socket->method()) && match.hasMatch() ) {
                QString pathparam = match.captured(1);
                auto reqObj = new OAIRemoteAccessApiRequest(socket, OAIRemoteAccessApiApiHandler);
                reqObj->postViewConfigRequest(pathparam);
                return; 
            }
        }
    }
    socket->setStatusCode(QHttpEngine::Socket::NotFound);
    if(socket->isOpen()){
        socket->writeHeaders();
        socket->close();
    }
    return;
}
}
