/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.1.1
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIPipeline.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIPipeline::OAIPipeline(QString json) {
    this->fromJson(json);
}

OAIPipeline::OAIPipeline() {
    this->init();
}

OAIPipeline::~OAIPipeline() {
    
}

void
OAIPipeline::init() {
    m__class_isSet = false;
    m_organization_isSet = false;
    m_name_isSet = false;
    m_display_name_isSet = false;
    m_full_name_isSet = false;
    m_weather_score_isSet = false;
    m_estimated_duration_in_millis_isSet = false;
    m_latest_run_isSet = false;
}

void
OAIPipeline::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIPipeline::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(_class, json[QString("_class")]);
    
    ::OpenAPI::fromJsonValue(organization, json[QString("organization")]);
    
    ::OpenAPI::fromJsonValue(name, json[QString("name")]);
    
    ::OpenAPI::fromJsonValue(display_name, json[QString("displayName")]);
    
    ::OpenAPI::fromJsonValue(full_name, json[QString("fullName")]);
    
    ::OpenAPI::fromJsonValue(weather_score, json[QString("weatherScore")]);
    
    ::OpenAPI::fromJsonValue(estimated_duration_in_millis, json[QString("estimatedDurationInMillis")]);
    
    ::OpenAPI::fromJsonValue(latest_run, json[QString("latestRun")]);
    
}

QString
OAIPipeline::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIPipeline::asJsonObject() const {
    QJsonObject obj;
	if(m__class_isSet){
        obj.insert(QString("_class"), ::OpenAPI::toJsonValue(_class));
    }
	if(m_organization_isSet){
        obj.insert(QString("organization"), ::OpenAPI::toJsonValue(organization));
    }
	if(m_name_isSet){
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(name));
    }
	if(m_display_name_isSet){
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(display_name));
    }
	if(m_full_name_isSet){
        obj.insert(QString("fullName"), ::OpenAPI::toJsonValue(full_name));
    }
	if(m_weather_score_isSet){
        obj.insert(QString("weatherScore"), ::OpenAPI::toJsonValue(weather_score));
    }
	if(m_estimated_duration_in_millis_isSet){
        obj.insert(QString("estimatedDurationInMillis"), ::OpenAPI::toJsonValue(estimated_duration_in_millis));
    }
	if(latest_run.isSet()){
        obj.insert(QString("latestRun"), ::OpenAPI::toJsonValue(latest_run));
    }
    return obj;
}

QString
OAIPipeline::getClass() const {
    return _class;
}
void
OAIPipeline::setClass(const QString &_class) {
    this->_class = _class;
    this->m__class_isSet = true;
}

QString
OAIPipeline::getOrganization() const {
    return organization;
}
void
OAIPipeline::setOrganization(const QString &organization) {
    this->organization = organization;
    this->m_organization_isSet = true;
}

QString
OAIPipeline::getName() const {
    return name;
}
void
OAIPipeline::setName(const QString &name) {
    this->name = name;
    this->m_name_isSet = true;
}

QString
OAIPipeline::getDisplayName() const {
    return display_name;
}
void
OAIPipeline::setDisplayName(const QString &display_name) {
    this->display_name = display_name;
    this->m_display_name_isSet = true;
}

QString
OAIPipeline::getFullName() const {
    return full_name;
}
void
OAIPipeline::setFullName(const QString &full_name) {
    this->full_name = full_name;
    this->m_full_name_isSet = true;
}

qint32
OAIPipeline::getWeatherScore() const {
    return weather_score;
}
void
OAIPipeline::setWeatherScore(const qint32 &weather_score) {
    this->weather_score = weather_score;
    this->m_weather_score_isSet = true;
}

qint32
OAIPipeline::getEstimatedDurationInMillis() const {
    return estimated_duration_in_millis;
}
void
OAIPipeline::setEstimatedDurationInMillis(const qint32 &estimated_duration_in_millis) {
    this->estimated_duration_in_millis = estimated_duration_in_millis;
    this->m_estimated_duration_in_millis_isSet = true;
}

OAIPipelinelatestRun
OAIPipeline::getLatestRun() const {
    return latest_run;
}
void
OAIPipeline::setLatestRun(const OAIPipelinelatestRun &latest_run) {
    this->latest_run = latest_run;
    this->m_latest_run_isSet = true;
}


bool
OAIPipeline::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(m__class_isSet){ isObjectUpdated = true; break;}
    
        if(m_organization_isSet){ isObjectUpdated = true; break;}
    
        if(m_name_isSet){ isObjectUpdated = true; break;}
    
        if(m_display_name_isSet){ isObjectUpdated = true; break;}
    
        if(m_full_name_isSet){ isObjectUpdated = true; break;}
    
        if(m_weather_score_isSet){ isObjectUpdated = true; break;}
    
        if(m_estimated_duration_in_millis_isSet){ isObjectUpdated = true; break;}
    
        if(latest_run.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

