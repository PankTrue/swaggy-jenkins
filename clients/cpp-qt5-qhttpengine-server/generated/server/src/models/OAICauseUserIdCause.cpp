/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.0.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAICauseUserIdCause.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAICauseUserIdCause::OAICauseUserIdCause(QString json) {
    this->fromJson(json);
}

OAICauseUserIdCause::OAICauseUserIdCause() {
    this->init();
}

OAICauseUserIdCause::~OAICauseUserIdCause() {
    
}

void
OAICauseUserIdCause::init() {
    m__class_isSet = false;
    m_short_description_isSet = false;
    m_user_id_isSet = false;
    m_user_name_isSet = false;
}

void
OAICauseUserIdCause::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAICauseUserIdCause::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(_class, json[QString("_class")]);
    
    ::OpenAPI::fromJsonValue(short_description, json[QString("shortDescription")]);
    
    ::OpenAPI::fromJsonValue(user_id, json[QString("userId")]);
    
    ::OpenAPI::fromJsonValue(user_name, json[QString("userName")]);
    
}

QString
OAICauseUserIdCause::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAICauseUserIdCause::asJsonObject() const {
    QJsonObject obj;
	if(m__class_isSet){
        obj.insert(QString("_class"), ::OpenAPI::toJsonValue(_class));
    }
	if(m_short_description_isSet){
        obj.insert(QString("shortDescription"), ::OpenAPI::toJsonValue(short_description));
    }
	if(m_user_id_isSet){
        obj.insert(QString("userId"), ::OpenAPI::toJsonValue(user_id));
    }
	if(m_user_name_isSet){
        obj.insert(QString("userName"), ::OpenAPI::toJsonValue(user_name));
    }
    return obj;
}

QString
OAICauseUserIdCause::getClass() const {
    return _class;
}
void
OAICauseUserIdCause::setClass(const QString &_class) {
    this->_class = _class;
    this->m__class_isSet = true;
}

QString
OAICauseUserIdCause::getShortDescription() const {
    return short_description;
}
void
OAICauseUserIdCause::setShortDescription(const QString &short_description) {
    this->short_description = short_description;
    this->m_short_description_isSet = true;
}

QString
OAICauseUserIdCause::getUserId() const {
    return user_id;
}
void
OAICauseUserIdCause::setUserId(const QString &user_id) {
    this->user_id = user_id;
    this->m_user_id_isSet = true;
}

QString
OAICauseUserIdCause::getUserName() const {
    return user_name;
}
void
OAICauseUserIdCause::setUserName(const QString &user_name) {
    this->user_name = user_name;
    this->m_user_name_isSet = true;
}


bool
OAICauseUserIdCause::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(m__class_isSet){ isObjectUpdated = true; break;}
    
        if(m_short_description_isSet){ isObjectUpdated = true; break;}
    
        if(m_user_id_isSet){ isObjectUpdated = true; break;}
    
        if(m_user_name_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

