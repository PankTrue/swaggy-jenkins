/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 1.1.1
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHudsonMasterComputermonitorData.h
 *
 * 
 */

#ifndef OAIHudsonMasterComputermonitorData_H
#define OAIHudsonMasterComputermonitorData_H

#include <QJsonObject>


#include "OAIClockDifference.h"
#include "OAIDiskSpaceMonitorDescriptorDiskSpace.h"
#include "OAIResponseTimeMonitorData.h"
#include "OAISwapSpaceMonitorMemoryUsage2.h"
#include <QString>

#include "OAIObject.h"

namespace OpenAPI {

class OAIHudsonMasterComputermonitorData: public OAIObject {
public:
    OAIHudsonMasterComputermonitorData();
    OAIHudsonMasterComputermonitorData(QString json);
    ~OAIHudsonMasterComputermonitorData() override;
    void init();

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISwapSpaceMonitorMemoryUsage2 getHudsonNodeMonitorsSwapSpaceMonitor() const;
    void setHudsonNodeMonitorsSwapSpaceMonitor(const OAISwapSpaceMonitorMemoryUsage2 &hudson_node_monitors_swap_space_monitor);

    OAIDiskSpaceMonitorDescriptorDiskSpace getHudsonNodeMonitorsTemporarySpaceMonitor() const;
    void setHudsonNodeMonitorsTemporarySpaceMonitor(const OAIDiskSpaceMonitorDescriptorDiskSpace &hudson_node_monitors_temporary_space_monitor);

    OAIDiskSpaceMonitorDescriptorDiskSpace getHudsonNodeMonitorsDiskSpaceMonitor() const;
    void setHudsonNodeMonitorsDiskSpaceMonitor(const OAIDiskSpaceMonitorDescriptorDiskSpace &hudson_node_monitors_disk_space_monitor);

    QString getHudsonNodeMonitorsArchitectureMonitor() const;
    void setHudsonNodeMonitorsArchitectureMonitor(const QString &hudson_node_monitors_architecture_monitor);

    OAIResponseTimeMonitorData getHudsonNodeMonitorsResponseTimeMonitor() const;
    void setHudsonNodeMonitorsResponseTimeMonitor(const OAIResponseTimeMonitorData &hudson_node_monitors_response_time_monitor);

    OAIClockDifference getHudsonNodeMonitorsClockMonitor() const;
    void setHudsonNodeMonitorsClockMonitor(const OAIClockDifference &hudson_node_monitors_clock_monitor);

    QString getClass() const;
    void setClass(const QString &_class);

    virtual bool isSet() const override;

private:
    OAISwapSpaceMonitorMemoryUsage2 hudson_node_monitors_swap_space_monitor;
    bool m_hudson_node_monitors_swap_space_monitor_isSet;

    OAIDiskSpaceMonitorDescriptorDiskSpace hudson_node_monitors_temporary_space_monitor;
    bool m_hudson_node_monitors_temporary_space_monitor_isSet;

    OAIDiskSpaceMonitorDescriptorDiskSpace hudson_node_monitors_disk_space_monitor;
    bool m_hudson_node_monitors_disk_space_monitor_isSet;

    QString hudson_node_monitors_architecture_monitor;
    bool m_hudson_node_monitors_architecture_monitor_isSet;

    OAIResponseTimeMonitorData hudson_node_monitors_response_time_monitor;
    bool m_hudson_node_monitors_response_time_monitor_isSet;

    OAIClockDifference hudson_node_monitors_clock_monitor;
    bool m_hudson_node_monitors_clock_monitor_isSet;

    QString _class;
    bool m__class_isSet;

};

}

#endif // OAIHudsonMasterComputermonitorData_H
